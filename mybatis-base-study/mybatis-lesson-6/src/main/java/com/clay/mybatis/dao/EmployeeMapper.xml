<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 指定命名空间为Mapper接口类的全类名 -->
<mapper namespace="com.clay.mybatis.dao.EmployeeMapper">

	<!-- 插入数据 -->
	<insert id="addEmp" parameterType="com.clay.mybatis.bean.Employee" useGeneratedKeys="true" keyProperty="id">
		insert into t_employee (last_name, gender, email)
		values(#{lastName}, #{gender}, #{email})
	</insert>

	<!-- 单参数处理 -->
	<select id="getEmpById" parameterType="Long" resultType="com.clay.mybatis.bean.Employee">
		select id, last_name as lastName, gender, email
		from t_employee
		where id = #{id}
	</select>

	<!-- 单参数处理（集合类型） -->
	<select id='getEmpByIds' resultType="com.clay.mybatis.bean.Employee">
		select id, last_name as lastName, gender, email
		from t_employee
		where id in (#{list[0]}, #{list[1]})
	</select>

	<!-- 多参数处理 -->
	<select id="getEmpByIdAndEmail" resultType="com.clay.mybatis.bean.Employee">
		select id, last_name as lastName, gender, email
		from t_employee
		where id = #{param1} and email = #{param2}
	</select>

	<!-- 多参数处理（使用Map） -->
	<select id="getEmpByIdAndEmailByMap" resultType="com.clay.mybatis.bean.Employee">
		select id, last_name as lastName, gender, email
		from t_employee
		where id = #{id} and email = #{email}
	</select>

	<!-- 多参数处理（使用注解） -->
	<select id="getEmpByIdAndEmailByAnnotation" resultType="com.clay.mybatis.bean.Employee">
		select id, last_name as lastName, gender, email
		from t_employee
		where id = #{id} and email = #{email}
	</select>

	<!-- MyBatis 内置参数 -->
	<select id="getEmpByInnerParameter" resultType="com.clay.mybatis.bean.Employee">
		<!-- 使用内置参数判断数据库类型 -->
		<if test="_databaseId == 'mysql'">
			select * from t_employee
			<!-- 使用内置参数判断传递进来的参数是否为NULL -->
			<if test="_parameter != null">
				where email = #{_parameter.email}
			</if>
		</if>
		<if test="_databaseId == 'oracle'">
			select * from employees
		</if>
	</select>

</mapper>