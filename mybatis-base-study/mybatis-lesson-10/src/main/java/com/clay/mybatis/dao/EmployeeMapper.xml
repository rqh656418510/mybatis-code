<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 指定命名空间为Mapper接口类的全类名 -->
<mapper namespace="com.clay.mybatis.dao.EmployeeMapper">

	<resultMap type="com.clay.mybatis.bean.Employee" id="employeeResultMap">
		<!-- id：定义主键列的封装规则； column：指定列名； property：指定对应的JavaBean属性； -->
		<id column="id" property="id" />
		<!-- 定义普通列的封装规则，即使不指定普通列 MyBatis 也会按照默认的规则自动封装，但一般都全部写上 -->
		<result column="last_name" property="lastName" />
		<result column="gender" property="gender" />
		<result column="email" property="email" />
		<!-- 定义单个级联对象的封装规则，property：指定哪个JavaBean属性是联合的对象，javaType：指定当前这个属性的对象类型（必填） -->
		<association property="department" javaType="com.clay.mybatis.bean.Department">
			<id column="dept_id" property="id" />
			<result column="dept_name" property="name" />
		</association>
	</resultMap>

	<!-- 插入数据 -->
	<insert id="addEmp" parameterType="com.clay.mybatis.bean.Employee" useGeneratedKeys="true" keyProperty="id">
		insert into t_employee (last_name, gender, email, dept_id)
		values(#{employee.lastName}, #{employee.gender}, #{employee.email}, #{employee.department.id})
	</insert>

	<select id="getEmpAndDept" resultMap="employeeResultMap">
		select emp.id, emp.last_name, emp.gender, emp.email, dept.id as dept_id, dept.name as dept_name
		from t_employee emp
		left join t_department dept
		on emp.dept_id = dept.id
		where emp.id = #{id}
	</select>

</mapper>